{"version":3,"sources":["Debounce/Debounce.js","Consts/ApiAddreses.js","Axios/Axios.js","Api/ApiRequests.js","Components/DailyWeatherCard/DailyWeatherCard.jsx","Components/Snackbar/Snackbar.jsx","Containers/SnackbarProvider/SnackbarProvider.jsx","Containers/DailyWeatherCard/DailyWeatherCardContainer.jsx","Actions/ActionTypes.js","Components/CityWeatherCard/CityWeatherCard.jsx","Actions/ActionCreators.js","Containers/CityWeatherCard/CityWeatherCardContainer.jsx","Components/Home/Home.jsx","Containers/Home/HomeContainer.jsx","Components/FavoriteCard/FavoriteCard.jsx","Containers/FavoriteCard/FavoriteCardContainer.jsx","Consts/Tabs.js","Components/Header/Header.jsx","Containers/Header/HeaderContainer.jsx","Theme/Theme.js","App.js","Reducers/FavoritesReducer.js","Reducers/UIReducer.js","Reducers/RootReducer.js","Reducers/PersistReducer.js","Store/Store.js","index.js"],"names":["debounce","func","wait","timeout","args","later","clearTimeout","setTimeout","API_KEY","axiosInstance","axios","create","baseURL","getCityDataByName","cityName","a","get","ApiAddresses","getCurrentWeatherData","cityId","getDailyForecasts","isCelsius","getCityDataByGeoposition","latitude","longitude","useStyles","makeStyles","cardContainer","display","justifyContent","backgroundColor","boxShadow","border","borderRadius","cardContent","alignItems","flexDirection","connect","state","UI","props","classes","dailyForecasts","weekDay","map","forecast","index","forecastDay","Date","getDay","Card","className","CardContent","Typography","variant","Temperature","Minimum","Value","Cloud","size","WbSunny","Maximum","icon","fontSize","message","CustomeSnackbar","openSnackbar","severity","onClose","Snackbar","open","autoHideDuration","Alert","elevation","action","IconButton","onClick","Close","color","snackbarContext","createContext","SnackbarProvider","useState","setMessage","isOpen","setIsOpen","setSeverity","children","closeSnackbar","Provider","value","useSnackbar","useContext","setDailyForecasts","id","useEffect","then","response","data","DailyForecasts","catch","error","ADD_FAVORITE_CITY","REMOVE_FAVORITE_CITY","TOGGLE_THEME","TOGGLE_DEGREES","theme","root","width","padding","paddingBottom","dailyCardsContainer","marginTop","grey","palette","type","favorites","Favorites","dispatch","addFavoriteCity","cityData","ActionTypes","payload","removeFavoriteCity","name","weatherText","degrees","celsius","farenheit","isFavoriteCity","favoriteCity","includes","CardHeader","title","Box","LocationOn","Favorite","FavoriteBorder","CityWeatherCardContainer","currentWeatherData","setCurrentWeatherData","Metric","Imperial","WeatherText","background","default","minHeight","searchBox","marginBottom","searchInput","marginLeft","flip","Home","handleSearchInput","Paper","Search","InputBase","placeholder","replace","onChange","event","Key","LocalizedName","HomeContainer","setSearchInput","setCityData","location","length","getCityDataDebounce","navigator","geolocation","getCurrentPosition","position","coords","URLSearchParams","search","target","card","navigateToCityCard","CardActionArea","favoritesCardContainer","history","push","pathname","tabs","find","tab","label","route","textAlign","flexWrap","component","exact","FavoriteCardContainer","appBar","height","toolbarTitle","fontWeight","isLightTheme","toggleTheme","toggleDegrees","selectedTab","handleSelectedTab","AppBar","Toolbar","Tooltip","Brightness4","BrightnessHigh","Switch","checked","Tabs","Tab","Link","to","withRouter","setSelectedTab","newSelectedTab","sharedOverrides","MuiTooltip","tooltip","lightTheme","primary","main","cyan","secondary","overrides","MuiAppBar","colorPrimary","MuiPaper","darkTheme","MuiCard","appliedTheme","createMuiTheme","ThemeProvider","path","initialState","favoritesReducer","filter","city","uiReducer","rootReducer","combineReducers","persistConfig","key","storage","persistReducer","store","createStore","PersistReducer","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0bca95f.chunk.js","sourcesContent":["const debounce = (func, wait) => {\r\n  let timeout;\r\n\r\n  return function executedFunc(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n};\r\n\r\nexport default debounce;\r\n","export const BASE_API = \"http://dataservice.accuweather.com\";\r\nexport const API_KEY = \"?apikey=rApDSOJGSKI3RIENouU9pLD2NIbiMKzW\";\r\nexport const AUTOCOMPLETE_API = \"/locations/v1/cities/autocomplete\";\r\nexport const DAILY_FORECAST_API = \"/forecasts/v1/daily/5day\";\r\nexport const CURRENT_CONDITIONS_API = \"/currentconditions/v1\";\r\nexport const GEOPOSITION_SEARCH_API = \"/locations/v1/cities/geoposition/search\";\r\n","import axios from \"axios\";\r\nimport { BASE_API } from \"../Consts/ApiAddreses\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_API,\r\n});\r\n\r\nexport default axiosInstance;\r\n","import axios from \"../Axios/Axios\";\r\nimport * as ApiAddresses from \"../Consts/ApiAddreses\";\r\n\r\nexport const getCityDataByName = async (cityName) => {\r\n  return await axios.get(\r\n    `${ApiAddresses.AUTOCOMPLETE_API + ApiAddresses.API_KEY}&q=${cityName}`\r\n  );\r\n};\r\n\r\nexport const getCurrentWeatherData = async (cityId) => {\r\n  return await axios.get(\r\n    `${ApiAddresses.CURRENT_CONDITIONS_API}/${cityId + ApiAddresses.API_KEY}`\r\n  );\r\n};\r\n\r\nexport const getDailyForecasts = async (cityId, isCelsius) => {\r\n  return await axios.get(\r\n    `${ApiAddresses.DAILY_FORECAST_API}/${\r\n      cityId + ApiAddresses.API_KEY\r\n    }&metric=${isCelsius}`\r\n  );\r\n};\r\n\r\nexport const getCityDataByGeoposition = async (latitude, longitude) => {\r\n  return await axios.get(\r\n    `${ApiAddresses.GEOPOSITION_SEARCH_API}${ApiAddresses.API_KEY}&q=${latitude}%2C%20${longitude}`\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, makeStyles } from \"@material-ui/core\";\r\nimport { Cloud, WbSunny } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  cardContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    boxShadow: \"none\",\r\n    border: \"none\",\r\n    borderRadius: 0,\r\n  },\r\n  cardContent: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n});\r\n\r\nconst DailyWeatherCard = (props) => {\r\n  const classes = useStyles();\r\n  const { dailyForecasts, isCelsius } = props;\r\n  const weekDay = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n  return dailyForecasts.map((forecast, index) => {\r\n    const forecastDay = new Date(forecast.Date).getDay();\r\n    return (\r\n      <Card className={classes.cardContainer} key={index}>\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography variant=\"h5\">{weekDay[forecastDay]}</Typography>\r\n          {forecast.Temperature.Minimum.Value < 16 ? (\r\n            <Cloud size=\"large\" />\r\n          ) : (\r\n            <WbSunny size=\"large\" />\r\n          )}\r\n          <Typography variant=\"subtitle1\">\r\n            {forecast.Temperature.Minimum.Value} -{\" \"}\r\n            {forecast.Temperature.Maximum.Value}{\" \"}\r\n            {isCelsius ? \"\\u00b0C\" : \"\\u00b0F\"}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  });\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isCelsius: state.UI.isCelsius,\r\n});\r\n\r\nexport default connect(mapStateToProps)(DailyWeatherCard);\r\n","import React from \"react\";\r\nimport { Snackbar, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { Close } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles({\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    fontSize: \"15px\",\r\n  },\r\n});\r\n\r\nconst CustomeSnackbar = (props) => {\r\n  const classes = useStyles();\r\n  const { openSnackbar, severity, onClose, message } = props;\r\n\r\n  return (\r\n    <Snackbar open={openSnackbar} onClose={onClose} autoHideDuration={10000}>\r\n      <Alert\r\n        elevation={6}\r\n        variant=\"filled\"\r\n        severity={severity}\r\n        action={\r\n          <IconButton onClick={onClose}>\r\n            <Close color=\"inherit\" className={classes.icon} />\r\n          </IconButton>\r\n        }\r\n        className={classes.message}\r\n      >\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default CustomeSnackbar;\r\n","import React, { createContext, useState, useContext } from \"react\";\r\nimport Snackbar from \"../../Components/Snackbar/Snackbar\";\r\n\r\nconst snackbarContext = createContext();\r\n\r\nexport const SnackbarProvider = (props) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [severity, setSeverity] = useState(\"\");\r\n  const { children } = props;\r\n\r\n  const openSnackbar = (message, severity) => {\r\n    setMessage(message || \"\");\r\n    setSeverity(severity);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const closeSnackbar = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <snackbarContext.Provider value={{ openSnackbar, closeSnackbar }}>\r\n      <Snackbar\r\n        openSnackbar={isOpen}\r\n        onClose={closeSnackbar}\r\n        message={message}\r\n        severity={severity}\r\n      />\r\n      {children}\r\n    </snackbarContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSnackbar = () => useContext(snackbarContext);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getDailyForecasts } from \"../../Api/ApiRequests\";\r\nimport * as MockApiResponses from \"../../MockApiResponses/MockApiResponses\";\r\nimport DailyWeatherCard from \"../../Components/DailyWeatherCard/DailyWeatherCard\";\r\nimport { connect } from \"react-redux\";\r\nimport { useSnackbar } from \"../SnackbarProvider/SnackbarProvider\";\r\n\r\nconst DailyWeatherCardContainer = (props) => {\r\n  const [dailyForecasts, setDailyForecasts] = useState(null);\r\n  const { openSnackbar } = useSnackbar();\r\n  const { id, isCelsius } = props;\r\n\r\n  useEffect(() => {\r\n    getDailyForecasts(id, isCelsius)\r\n      .then((response) => setDailyForecasts(response.data.DailyForecasts))\r\n      .catch((error) => openSnackbar(error.message, \"error\"));\r\n\r\n    // setDailyForecasts(MockApiResponses.DailyForecasts.data.DailyForecasts);\r\n  }, [id, isCelsius]);\r\n\r\n  return dailyForecasts ? (\r\n    <DailyWeatherCard dailyForecasts={dailyForecasts} />\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isCelsius: state.UI.isCelsius,\r\n});\r\n\r\nexport default connect(mapStateToProps)(DailyWeatherCardContainer);\r\n","export const ADD_FAVORITE_CITY = \"ADD_FAVORITE_CITY\";\r\nexport const REMOVE_FAVORITE_CITY = \"REMOVE_FAVORITE_CITY\";\r\nexport const TOGGLE_THEME = \"TOGGLE_THEME\";\r\nexport const TOGGLE_DEGREES = \"TOGGLE_DEGREES\";\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  makeStyles,\r\n  IconButton,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Cloud,\r\n  Favorite,\r\n  LocationOn,\r\n  FavoriteBorder,\r\n} from \"@material-ui/icons\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport DailyWeatherCardContainer from \"../../Containers/DailyWeatherCard/DailyWeatherCardContainer\";\r\nimport { connect } from \"react-redux\";\r\nimport * as ActionCreators from \"../../Actions/ActionCreators\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"60%\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  cardContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: 0,\r\n    \"&:last-child\": {\r\n      paddingBottom: 0,\r\n    },\r\n  },\r\n  dailyCardsContainer: {\r\n    marginTop: \"3em\",\r\n    width: \"100%\",\r\n    backgroundColor: grey[theme.palette.type === \"light\" ? 700 : 800],\r\n  },\r\n}));\r\n\r\nconst CityWeatherCard = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    id,\r\n    name,\r\n    weatherText,\r\n    removeFavoriteCity,\r\n    addFavoriteCity,\r\n    isCelsius,\r\n    favorites,\r\n  } = props;\r\n  const { celsius, farenheit } = props.degrees;\r\n\r\n  const isFavoriteCity = favorites\r\n    .map((favoriteCity) => favoriteCity.id)\r\n    .includes(id);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        title={\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\"\r\n            width=\"100%\"\r\n          >\r\n            <LocationOn size=\"medium\" />\r\n            <Typography variant=\"h5\">{name}</Typography>\r\n          </Box>\r\n        }\r\n        action={\r\n          <IconButton\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            onClick={() => {\r\n              isFavoriteCity\r\n                ? removeFavoriteCity(id)\r\n                : addFavoriteCity({\r\n                    id,\r\n                    name,\r\n                    weatherText,\r\n                    degrees: {\r\n                      celsius,\r\n                      farenheit,\r\n                    },\r\n                  });\r\n            }}\r\n          >\r\n            {isFavoriteCity ? <Favorite /> : <FavoriteBorder />}\r\n          </IconButton>\r\n        }\r\n      />\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography variant=\"h3\">\r\n          {isCelsius ? celsius + \"\\u00b0C\" : farenheit + \"\\u00b0F\"}\r\n        </Typography>\r\n        <Cloud size=\"large\" />\r\n        <Typography variant=\"h4\">{weatherText}</Typography>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-evenly\"\r\n          className={classes.dailyCardsContainer}\r\n        >\r\n          <DailyWeatherCardContainer id={id} />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  favorites: state.Favorites.favorites,\r\n  isCelsius: state.UI.isCelsius,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addFavoriteCity: (cityData) =>\r\n    dispatch(ActionCreators.addFavoriteCity(cityData)),\r\n  removeFavoriteCity: (id) => dispatch(ActionCreators.removeFavoriteCity(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CityWeatherCard);\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const addFavoriteCity = (payload) => ({\r\n  type: ActionTypes.ADD_FAVORITE_CITY,\r\n  payload,\r\n});\r\n\r\nexport const removeFavoriteCity = (payload) => ({\r\n  type: ActionTypes.REMOVE_FAVORITE_CITY,\r\n  payload,\r\n});\r\n\r\nexport const toggleTheme = () => ({\r\n  type: ActionTypes.TOGGLE_THEME,\r\n});\r\n\r\nexport const toggleDegrees = () => ({\r\n  type: ActionTypes.TOGGLE_DEGREES,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as MockApiResponses from \"../../MockApiResponses/MockApiResponses\";\r\nimport CityWeatherCard from \"../../Components/CityWeatherCard/CityWeatherCard\";\r\nimport { getCurrentWeatherData } from \"../../Api/ApiRequests\";\r\nimport { useSnackbar } from \"../SnackbarProvider/SnackbarProvider\";\r\n\r\nconst CityWeatherCardContainer = (props) => {\r\n  const [currentWeatherData, setCurrentWeatherData] = useState(null);\r\n  const { openSnackbar } = useSnackbar();\r\n  const { id, name } = props;\r\n\r\n  useEffect(() => {\r\n    getCurrentWeatherData(id)\r\n      .then((response) => setCurrentWeatherData(response.data[0]))\r\n      .catch((error) => openSnackbar(error.message, \"error\"));\r\n\r\n    // setCurrentWeatherData(MockApiResponses.CurrentConditions.data);\r\n  }, [id]);\r\n\r\n  return currentWeatherData ? (\r\n    <CityWeatherCard\r\n      id={id}\r\n      name={name}\r\n      degrees={{\r\n        celsius: currentWeatherData.Temperature.Metric.Value,\r\n        farenheit: currentWeatherData.Temperature.Imperial.Value,\r\n      }}\r\n      weatherText={currentWeatherData.WeatherText}\r\n    />\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport default CityWeatherCardContainer;\r\n","import React from \"react\";\r\nimport { Paper, InputBase, makeStyles, Box } from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport CityWeatherCardContainer from \"../../Containers/CityWeatherCard/CityWeatherCardContainer\";\r\n\r\nconst useStyles = makeStyles(\r\n  (theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      backgroundColor: theme.palette.background.default,\r\n      minHeight: \"90%\",\r\n    },\r\n    searchBox: {\r\n      border: \"1px solid #ccc\",\r\n      marginTop: \"2%\",\r\n      marginBottom: \"2%\",\r\n      padding: \"8px\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    searchInput: {\r\n      fontSize: \"1.2em\",\r\n      marginLeft: \"2%\",\r\n      width: \"100%\",\r\n    },\r\n  }),\r\n  { flip: false }\r\n);\r\n\r\nconst Home = (props) => {\r\n  const classes = useStyles();\r\n  const { searchInput, handleSearchInput, cityData } = props;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        width=\"30%\"\r\n        className={classes.searchBox}\r\n      >\r\n        <Search fontSize=\"default\" color=\"primary\" />\r\n        <InputBase\r\n          placeholder=\"Type here a city name\"\r\n          value={searchInput.replace(/[^A-Za-z]/gi, \"\")}\r\n          onChange={(event) => handleSearchInput(event)}\r\n          className={classes.searchInput}\r\n        />\r\n      </Box>\r\n      {cityData ? (\r\n        <CityWeatherCardContainer\r\n          id={cityData.Key}\r\n          name={cityData.LocalizedName}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport debounce from \"../../Debounce/Debounce\";\r\nimport * as MockApiResponses from \"../../MockApiResponses/MockApiResponses\";\r\nimport Home from \"../../Components/Home/Home\";\r\nimport { useSnackbar } from \"../SnackbarProvider/SnackbarProvider\";\r\nimport {\r\n  getCityDataByName,\r\n  getCityDataByGeoposition,\r\n} from \"../../Api/ApiRequests\";\r\n\r\nconst HomeContainer = (props) => {\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [cityData, setCityData] = useState(null);\r\n  const { openSnackbar } = useSnackbar();\r\n  const { location } = props;\r\n\r\n  useEffect(() => {\r\n    if (searchInput) {\r\n      const getCityDataDebounce = debounce(async () => {\r\n        getCityDataByName(searchInput)\r\n          .then((response) => {\r\n            if (response.data.length) {\r\n              setCityData(response.data[0]);\r\n            } else {\r\n              openSnackbar(\r\n                \"Oops! We couldn't find any cities that match your search.\",\r\n                \"warning\"\r\n              );\r\n            }\r\n          })\r\n          .catch((error) => openSnackbar(error.message, \"error\"));\r\n      }, 1000);\r\n\r\n      getCityDataDebounce();\r\n    } else {\r\n      const getCityData = (position) => {\r\n        getCityDataByGeoposition(\r\n          position.coords.latitude,\r\n          position.coords.longitude\r\n        )\r\n          .then((response) => setCityData(response.data))\r\n          .catch((error) => openSnackbar(error.message, \"error\"));\r\n      };\r\n\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(getCityData);\r\n      }\r\n    }\r\n\r\n    // setCityData(MockApiResponses.Autocomplete.data[0]);\r\n  }, [searchInput]);\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(location.search);\r\n    const cityName = urlParams.get(\"cityName\");\r\n    setSearchInput(cityName || \"\");\r\n  }, [location.search]);\r\n\r\n  const handleSearchInput = (event) => {\r\n    setSearchInput(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Home\r\n      searchInput={searchInput}\r\n      cityData={cityData}\r\n      handleSearchInput={handleSearchInput}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardHeader,\r\n  CardActionArea,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { WbSunny } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    marginTop: \"2%\",\r\n  },\r\n});\r\nconst FavoriteCard = (props) => {\r\n  const classes = useStyles();\r\n  const { navigateToCityCard, name, degrees, isCelsius, weatherText } = props;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea onClick={() => navigateToCityCard(name)}>\r\n        <CardHeader title={<Typography variant=\"h4\">{name}</Typography>} />\r\n        <CardContent>\r\n          <WbSunny size=\"large\" />\r\n          <Typography variant=\"h6\">\r\n            {degrees} {isCelsius ? \"\\u00b0C\" : \"\\u00b0F\"}\r\n          </Typography>\r\n          <Typography variant=\"h5\">{weatherText}</Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isCelsius: state.UI.isCelsius,\r\n});\r\n\r\nexport default connect(mapStateToProps)(FavoriteCard);\r\n","import React from \"react\";\r\nimport FavoriteCard from \"../../Components/FavoriteCard/FavoriteCard\";\r\nimport { connect } from \"react-redux\";\r\nimport { Paper, Box, makeStyles } from \"@material-ui/core\";\r\nimport { tabs } from \"../../Consts/Tabs\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.palette.background.default,\r\n    minHeight: \"90%\",\r\n  },\r\n  favoritesCardContainer: {\r\n    marginTop: \"5%\",\r\n  },\r\n}));\r\n\r\nconst FavoriteCardContainer = (props) => {\r\n  const classes = useStyles();\r\n  const { history, favorites, isCelsius } = props;\r\n\r\n  const navigateToCityCard = (cityName) => {\r\n    history.push({\r\n      pathname: tabs.find((tab) => tab.label === \"Home\").route,\r\n      search: `?cityName=${cityName}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        textAlign=\"center\"\r\n        width=\"80%\"\r\n        flexWrap=\"wrap\"\r\n        className={classes.favoritesCardContainer}\r\n      >\r\n        {favorites.map((favoriteCity, index) => (\r\n          <FavoriteCard\r\n            key={index}\r\n            name={favoriteCity.name}\r\n            degrees={\r\n              isCelsius\r\n                ? favoriteCity.degrees.celsius\r\n                : favoriteCity.degrees.farenheit\r\n            }\r\n            weatherText={favoriteCity.weatherText}\r\n            navigateToCityCard={navigateToCityCard}\r\n          />\r\n        ))}\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  favorites: state.Favorites.favorites,\r\n  isCelsius: state.UI.isCelsius,\r\n});\r\n\r\nexport default connect(mapStateToProps)(FavoriteCardContainer);\r\n","import HomeContainer from \"../Containers/Home/HomeContainer\";\r\nimport FavoriteCardContainer from \"../Containers/FavoriteCard/FavoriteCardContainer\";\r\nimport {\r\n  Home as HomeIcon,\r\n  Favorite as FavoritesIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nexport const tabs = [\r\n  {\r\n    label: \"Home\",\r\n    route: \"/\",\r\n    component: HomeContainer,\r\n    icon: <HomeIcon />,\r\n    exact: true,\r\n  },\r\n  {\r\n    label: \"Favorites\",\r\n    route: \"/favorites\",\r\n    component: FavoriteCardContainer,\r\n    icon: <FavoritesIcon />,\r\n    exact: false,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  makeStyles,\r\n  Tooltip,\r\n  IconButton,\r\n  Box,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\nimport { tabs } from \"../../Consts/Tabs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Brightness4, BrightnessHigh } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport * as ActionCreators from \"../../Actions/ActionCreators\";\r\n\r\nconst useStyles = makeStyles({\r\n  appBar: {\r\n    height: \"10%\",\r\n  },\r\n  toolbarTitle: {\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  const {\r\n    toggleTheme,\r\n    isLightTheme,\r\n    isCelsius,\r\n    toggleDegrees,\r\n    selectedTab,\r\n    handleSelectedTab,\r\n  } = props;\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={classes.appBar}>\r\n      <Toolbar>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          width=\"100%\"\r\n        >\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Tooltip title={\"Change theme\"}>\r\n              <IconButton onClick={toggleTheme}>\r\n                {isLightTheme ? <Brightness4 /> : <BrightnessHigh />}\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Typography variant=\"h6\" className={classes.toolbarTitle}>\r\n              Herolo Weather Task\r\n            </Typography>\r\n          </Box>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Typography variant=\"h4\">&#8457;</Typography>\r\n            <Switch checked={isCelsius} onChange={toggleDegrees} />\r\n            <Typography variant=\"h4\">&#8451;</Typography>\r\n          </Box>\r\n          <Tabs value={selectedTab} onChange={handleSelectedTab}>\r\n            {tabs.map((tab, index) => (\r\n              <Tab\r\n                key={index}\r\n                label={<Typography variant=\"caption\">{tab.label}</Typography>}\r\n                component={Link}\r\n                to={tab.route}\r\n                value={tab.route}\r\n                icon={tab.icon}\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLightTheme: state.UI.isLightTheme,\r\n  isCelsius: state.UI.isCelsius,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleTheme: () => dispatch(ActionCreators.toggleTheme()),\r\n  toggleDegrees: () => dispatch(ActionCreators.toggleDegrees()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Header from \"../../Components/Header/Header\";\r\n\r\nconst HeaderContainer = (props) => {\r\n  const { location } = props;\r\n  const [selectedTab, setSelectedTab] = useState(location.pathname);\r\n\r\n  useEffect(() => {\r\n    if (location.search.includes(\"?\")) {\r\n      setSelectedTab(location.pathname);\r\n    }\r\n  }, [location]);\r\n\r\n  const handleSelectedTab = (event, newSelectedTab) => {\r\n    setSelectedTab(newSelectedTab);\r\n  };\r\n\r\n  return (\r\n    <Header selectedTab={selectedTab} handleSelectedTab={handleSelectedTab} />\r\n  );\r\n};\r\n\r\nexport default withRouter(HeaderContainer);\r\n","import { cyan, grey } from \"@material-ui/core/colors\";\r\n\r\nconst sharedOverrides = {\r\n  MuiTooltip: {\r\n    tooltip: {\r\n      fontSize: \"15px\",\r\n    },\r\n  },\r\n};\r\n\r\nexport const lightTheme = {\r\n  palette: {\r\n    type: \"light\",\r\n    primary: {\r\n      main: cyan[800],\r\n    },\r\n    secondary: {\r\n      main: cyan[200],\r\n    },\r\n    background: {\r\n      default: grey[200],\r\n    },\r\n  },\r\n  overrides: {\r\n    ...sharedOverrides,\r\n    MuiAppBar: {\r\n      colorPrimary: {\r\n        background: cyan[800],\r\n        color: \"black\",\r\n      },\r\n    },\r\n    MuiPaper: {\r\n      root: {\r\n        backgroundColor: cyan[800],\r\n        color: \"black\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const darkTheme = {\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: cyan[500],\r\n    },\r\n    secondary: {\r\n      main: cyan[200],\r\n    },\r\n  },\r\n  overrides: {\r\n    ...sharedOverrides,\r\n    MuiAppBar: {\r\n      colorPrimary: {\r\n        background: cyan[900],\r\n        color: \"white\",\r\n      },\r\n    },\r\n    MuiPaper: {\r\n      root: {\r\n        backgroundColor: cyan[800],\r\n        color: \"white\",\r\n      },\r\n    },\r\n    MuiCard: {\r\n      root: {\r\n        border: \"1px solid darkgrey\",\r\n      },\r\n    },\r\n  },\r\n};\r\n","import React from \"react\";\nimport HeaderContainer from \"./Containers/Header/HeaderContainer\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { tabs } from \"./Consts/Tabs\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { lightTheme, darkTheme } from \"./Theme/Theme\";\nimport { SnackbarProvider } from \"./Containers/SnackbarProvider/SnackbarProvider\";\nimport { connect } from \"react-redux\";\n\nconst App = (props) => {\n  const { isLightTheme } = props;\n  const appliedTheme = createMuiTheme(isLightTheme ? lightTheme : darkTheme);\n\n  return (\n    <>\n      <ThemeProvider theme={appliedTheme}>\n        <SnackbarProvider>\n          <HeaderContainer />\n          <Switch>\n            {tabs.map((tab, index) => (\n              <Route\n                key={index}\n                path={tab.route}\n                component={tab.component}\n                exact={tab.exact}\n              />\n            ))}\n          </Switch>\n        </SnackbarProvider>\n      </ThemeProvider>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isLightTheme: state.UI.isLightTheme,\n});\n\nexport default connect(mapStateToProps)(App);\n","import * as ActionTypes from \"../Actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  favorites: [],\r\n};\r\n\r\nconst favoritesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_FAVORITE_CITY:\r\n      return {\r\n        ...state,\r\n        favorites: [...state.favorites, action.payload],\r\n      };\r\n    case ActionTypes.REMOVE_FAVORITE_CITY:\r\n      return {\r\n        ...state,\r\n        favorites: state.favorites.filter((city) => city.id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default favoritesReducer;\r\n","import * as ActionTypes from \"../Actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  isLightTheme: true,\r\n  isCelsius: true,\r\n};\r\n\r\nconst uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.TOGGLE_THEME:\r\n      return {\r\n        ...state,\r\n        isLightTheme: !state.isLightTheme,\r\n      };\r\n    case ActionTypes.TOGGLE_DEGREES:\r\n      return {\r\n        ...state,\r\n        isCelsius: !state.isCelsius,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default uiReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport favoritesReducer from \"./FavoritesReducer\";\r\nimport uiReducer from \"./UIReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  Favorites: favoritesReducer,\r\n  UI: uiReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport rootReducer from \"./RootReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"rootReducer\",\r\n  storage,\r\n};\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","import { createStore } from \"redux\";\r\nimport PersistReducer from \"../Reducers/PersistReducer\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nexport const store = createStore(PersistReducer);\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./Store/Store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}