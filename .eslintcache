[{"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\index.tsx":"1","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\App.tsx":"2","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Store\\Store.tsx":"3","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Theme\\Theme.tsx":"4","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Reducers\\PersistReducer.ts":"5","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Reducers\\RootReducer.ts":"6","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Reducers\\FavoritesReducer.ts":"7","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Reducers\\UIReducer.ts":"8","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Debounce\\Debounce.ts":"9","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Consts\\Tabs.tsx":"10","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Api\\ApiRequests.ts":"11","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Actions\\ActionTypes.ts":"12","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Consts\\ApiAddreses.ts":"13","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Axios\\Axios.ts":"14","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Consts\\PicturesEnum.ts":"15","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Actions\\index.ts":"16","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Actions\\Favorites.ts":"17","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Actions\\UI.ts":"18","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Containers\\SnackbarProvider\\SnackbarProvider.tsx":"19","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Containers\\Home\\HomeContainer.tsx":"20","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Containers\\Header\\HeaderContainer.tsx":"21","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Containers\\FavoriteCard\\FavoriteCardContainer.tsx":"22","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Containers\\DailyWeatherCard\\DailyWeatherCardContainer.tsx":"23","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Containers\\CityWeatherCard\\CityWeatherCardContainer.tsx":"24","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Components\\Snackbar\\Snackbar.tsx":"25","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Components\\Header\\Header.tsx":"26","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Components\\Home\\Home.tsx":"27","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Components\\FavoriteCard\\FavoriteCard.tsx":"28","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Components\\DailyWeatherCard\\DailyWeatherCard.tsx":"29","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Components\\CityWeatherCard\\CityWeatherCard.tsx":"30"},{"size":547,"mtime":1610043010786,"results":"31","hashOfConfig":"32"},{"size":1335,"mtime":1610203519502,"results":"33","hashOfConfig":"32"},{"size":279,"mtime":1610203612030,"results":"34","hashOfConfig":"32"},{"size":1276,"mtime":1610203492936,"results":"35","hashOfConfig":"32"},{"size":269,"mtime":1610276154301,"results":"36","hashOfConfig":"32"},{"size":259,"mtime":1610276160523,"results":"37","hashOfConfig":"32"},{"size":779,"mtime":1610382713369,"results":"38","hashOfConfig":"32"},{"size":750,"mtime":1610382724395,"results":"39","hashOfConfig":"32"},{"size":270,"mtime":1610277537657,"results":"40","hashOfConfig":"32"},{"size":791,"mtime":1610296657167,"results":"41","hashOfConfig":"32"},{"size":909,"mtime":1610292485395,"results":"42","hashOfConfig":"32"},{"size":242,"mtime":1610278673374,"results":"43","hashOfConfig":"32"},{"size":459,"mtime":1610290043563,"results":"44","hashOfConfig":"32"},{"size":213,"mtime":1610291810145,"results":"45","hashOfConfig":"32"},{"size":2043,"mtime":1610290097907,"results":"46","hashOfConfig":"32"},{"size":118,"mtime":1610292394499,"results":"47","hashOfConfig":"32"},{"size":502,"mtime":1610289672114,"results":"48","hashOfConfig":"32"},{"size":292,"mtime":1610289898371,"results":"49","hashOfConfig":"32"},{"size":1254,"mtime":1610383518672,"results":"50","hashOfConfig":"32"},{"size":2655,"mtime":1610385154511,"results":"51","hashOfConfig":"32"},{"size":902,"mtime":1610383579885,"results":"52","hashOfConfig":"32"},{"size":2523,"mtime":1610383555573,"results":"53","hashOfConfig":"32"},{"size":1339,"mtime":1610384974926,"results":"54","hashOfConfig":"32"},{"size":1372,"mtime":1610384090878,"results":"55","hashOfConfig":"32"},{"size":1217,"mtime":1610458336934,"results":"56","hashOfConfig":"32"},{"size":2876,"mtime":1610458777773,"results":"57","hashOfConfig":"32"},{"size":1907,"mtime":1610459184744,"results":"58","hashOfConfig":"32"},{"size":1481,"mtime":1610459235072,"results":"59","hashOfConfig":"32"},{"size":2458,"mtime":1610459690409,"results":"60","hashOfConfig":"32"},{"size":4337,"mtime":1610460770933,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"12mnggc",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\index.tsx",[],["127","128"],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\App.tsx",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Store\\Store.tsx",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Theme\\Theme.tsx",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Reducers\\PersistReducer.ts",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Reducers\\RootReducer.ts",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Reducers\\FavoritesReducer.ts",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Reducers\\UIReducer.ts",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Debounce\\Debounce.ts",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Consts\\Tabs.tsx",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Api\\ApiRequests.ts",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Actions\\ActionTypes.ts",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Consts\\ApiAddreses.ts",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Axios\\Axios.ts",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Consts\\PicturesEnum.ts",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Actions\\index.ts",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Actions\\Favorites.ts",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Actions\\UI.ts",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Containers\\SnackbarProvider\\SnackbarProvider.tsx",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Containers\\Home\\HomeContainer.tsx",["129","130"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport debounce from \"../../Debounce/Debounce\";\r\nimport Home from \"../../Components/Home/Home\";\r\nimport { useSnackbar } from \"../SnackbarProvider/SnackbarProvider\";\r\nimport {\r\n  getCityDataByName,\r\n  getCityDataByGeoposition,\r\n} from \"../../Api/ApiRequests\";\r\nimport { ISnackbarContext } from \"../../Interfaces/ISnackbarContext/ISnackbarContext\";\r\nimport ReactRouterPropTypes from \"react-router-prop-types\";\r\nimport { ICityData } from \"../../Interfaces/ApiObjectsInterfaces/ApiObjectsInterfaces\";\r\n\r\nconst HomeContainer = (props) => {\r\n  const [searchInput, setSearchInput] = useState<string>(\"\");\r\n  const [cityData, setCityData] = useState<ICityData>(null);\r\n  const { openSnackbar }: ISnackbarContext = useSnackbar();\r\n  const { location } = props;\r\n\r\n  const getCityDataDebouncedCallback = useCallback(\r\n    debounce(async (searchInput: string): Promise<void> => {\r\n      await getCityDataByName(searchInput)\r\n        .then((response) => {\r\n          if (response.data.length) {\r\n            setCityData(response.data[0]);\r\n          } else {\r\n            openSnackbar(\r\n              \"Oops! We couldn't find any cities that match your search.\",\r\n              \"warning\"\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => openSnackbar(error.message, \"error\"));\r\n    }, 2000),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (searchInput) {\r\n      getCityDataDebouncedCallback(searchInput);\r\n    } else if (location.search) {\r\n      const urlParams: URLSearchParams = new URLSearchParams(location.search);\r\n      const cityName: string = urlParams.get(\"cityName\");\r\n      setSearchInput(cityName || \"\");\r\n    } else {\r\n      const getCityData = async (position: GeolocationPosition): Promise<void> => {\r\n        await getCityDataByGeoposition(\r\n          position.coords.latitude,\r\n          position.coords.longitude\r\n        )\r\n          .then((response) => setCityData(response.data))\r\n          .catch((error) => openSnackbar(error.message, \"error\"));\r\n      };\r\n\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(getCityData);\r\n      }\r\n    }\r\n  }, [searchInput, location.search]);\r\n\r\n  const handleSearchInput = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setSearchInput(event.target.value);\r\n    location.search = event.target.value;\r\n  };\r\n\r\n  return (\r\n    <Home\r\n      searchInput={searchInput}\r\n      cityData={cityData}\r\n      handleSearchInput={handleSearchInput}\r\n    />\r\n  );\r\n};\r\n\r\nHomeContainer.propTypes = {\r\n  location: ReactRouterPropTypes.location.isRequired,\r\n};\r\n\r\nexport default HomeContainer;\r\n","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Containers\\Header\\HeaderContainer.tsx",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Containers\\FavoriteCard\\FavoriteCardContainer.tsx",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Containers\\DailyWeatherCard\\DailyWeatherCardContainer.tsx",["131"],"import React, { useState, useEffect } from \"react\";\r\nimport { getDailyForecasts } from \"../../Api/ApiRequests\";\r\nimport DailyWeatherCard from \"../../Components/DailyWeatherCard/DailyWeatherCard\";\r\nimport { connect } from \"react-redux\";\r\nimport { useSnackbar } from \"../SnackbarProvider/SnackbarProvider\";\r\nimport PropTypes from \"prop-types\";\r\nimport { RootState } from \"../../Types/RootState/RootState\";\r\nimport { IDailyForecast } from \"../../Interfaces/ApiObjectsInterfaces/ApiObjectsInterfaces\";\r\n\r\nconst DailyWeatherCardContainer = (props) => {\r\n  const [dailyForecasts, setDailyForecasts] = useState<IDailyForecast[]>(null);\r\n  const { openSnackbar } = useSnackbar();\r\n  const { id, isCelsius } = props;\r\n\r\n  useEffect(() => {\r\n    getDailyForecasts(id, isCelsius)\r\n      .then((response) => setDailyForecasts(response.data.DailyForecasts))\r\n      .catch((error) => openSnackbar(error.message, \"error\"));\r\n  }, [id, isCelsius]);\r\n\r\n  return dailyForecasts ? (\r\n    <DailyWeatherCard dailyForecasts={dailyForecasts} />\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  isCelsius: state.UI.isCelsius,\r\n});\r\n\r\nDailyWeatherCardContainer.propTypes = {\r\n  isCelsius: PropTypes.bool.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(DailyWeatherCardContainer);\r\n","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Containers\\CityWeatherCard\\CityWeatherCardContainer.tsx",["132"],"import React, { useState, useEffect } from \"react\";\r\nimport CityWeatherCard from \"../../Components/CityWeatherCard/CityWeatherCard\";\r\nimport { getCurrentWeatherData } from \"../../Api/ApiRequests\";\r\nimport { useSnackbar } from \"../SnackbarProvider/SnackbarProvider\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ICurrentWeatherData } from \"../../Interfaces/ApiObjectsInterfaces/ApiObjectsInterfaces\";\r\n\r\nconst CityWeatherCardContainer = (props) => {\r\n  const [currentWeatherData, setCurrentWeatherData] = useState<ICurrentWeatherData>(null);\r\n  const { openSnackbar } = useSnackbar();\r\n  const { id, name } = props;\r\n\r\n  useEffect(() => {\r\n    getCurrentWeatherData(id)\r\n      .then((response) => setCurrentWeatherData(response.data[0]))\r\n      .catch((error) => openSnackbar(error.message, \"error\"));\r\n  }, [id]);\r\n\r\n  return currentWeatherData ? (\r\n    <CityWeatherCard\r\n      id={id}\r\n      name={name}\r\n      degrees={{\r\n        celsius: currentWeatherData.Temperature.Metric.Value,\r\n        farenheit: currentWeatherData.Temperature.Imperial.Value,\r\n      }}\r\n      weatherText={currentWeatherData.WeatherText}\r\n      weatherIcon={currentWeatherData.WeatherIcon}\r\n    />\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nCityWeatherCardContainer.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CityWeatherCardContainer;\r\n","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Components\\Snackbar\\Snackbar.tsx",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Components\\Header\\Header.tsx",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Components\\Home\\Home.tsx",["133"],"import React from \"react\";\r\nimport { Paper, InputBase, makeStyles, Box, Theme } from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport CityWeatherCardContainer from \"../../Containers/CityWeatherCard/CityWeatherCardContainer\";\r\nimport PropTypes, { string } from \"prop-types\";\r\n\r\nconst useStyles = makeStyles(\r\n  (theme: Theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      backgroundColor: theme.palette.background.default,\r\n      minHeight: \"90%\",\r\n    },\r\n    searchBox: {\r\n      border: \"1px solid #ccc\",\r\n      marginTop: \"2%\",\r\n      marginBottom: \"2%\",\r\n      padding: \"8px\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    searchInput: {\r\n      fontSize: \"1.2em\",\r\n      marginLeft: \"2%\",\r\n      width: \"100%\",\r\n    },\r\n  }),\r\n  { flip: false }\r\n);\r\n\r\nconst Home = (props) => {\r\n  const classes = useStyles();\r\n  const { searchInput, handleSearchInput, cityData } = props;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        width=\"30%\"\r\n        className={classes.searchBox}\r\n      >\r\n        <Search fontSize=\"default\" color=\"primary\" />\r\n        <InputBase\r\n          placeholder=\"Type here a city name\"\r\n          onChange={(event) => handleSearchInput(event)}\r\n          value={searchInput.replace(/[^A-Za-z\\s]/gi, \"\")}\r\n          className={classes.searchInput}\r\n        />\r\n      </Box>\r\n      {cityData ? (\r\n        <CityWeatherCardContainer\r\n          id={cityData.Key}\r\n          name={cityData.LocalizedName}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  searchInput: PropTypes.string.isRequired,\r\n  handleSearchInput: PropTypes.func.isRequired,\r\n  cityData: PropTypes.shape({\r\n    key: PropTypes.string,\r\n    LocalizedName: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default Home;\r\n","C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Components\\FavoriteCard\\FavoriteCard.tsx",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Components\\DailyWeatherCard\\DailyWeatherCard.tsx",[],"C:\\yuvalprojects\\react\\WeatherApp\\weather-app\\src\\Components\\CityWeatherCard\\CityWeatherCard.tsx",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":19,"column":40,"nodeType":"140","endLine":19,"endColumn":51},{"ruleId":"138","severity":1,"message":"141","line":58,"column":6,"nodeType":"142","endLine":58,"endColumn":36,"suggestions":"143"},{"ruleId":"138","severity":1,"message":"144","line":19,"column":6,"nodeType":"142","endLine":19,"endColumn":21,"suggestions":"145"},{"ruleId":"138","severity":1,"message":"144","line":17,"column":6,"nodeType":"142","endLine":17,"endColumn":10,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":5,"column":21,"nodeType":"140","messageId":"149","endLine":5,"endColumn":27},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","Identifier","React Hook useEffect has missing dependencies: 'getCityDataDebouncedCallback' and 'openSnackbar'. Either include them or remove the dependency array.","ArrayExpression",["152"],"React Hook useEffect has a missing dependency: 'openSnackbar'. Either include it or remove the dependency array.",["153"],["154"],"@typescript-eslint/no-unused-vars","'string' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [searchInput, location.search, getCityDataDebouncedCallback, openSnackbar]",{"range":"161","text":"162"},"Update the dependencies array to be: [id, isCelsius, openSnackbar]",{"range":"163","text":"164"},"Update the dependencies array to be: [id, openSnackbar]",{"range":"165","text":"166"},[2173,2203],"[searchInput, location.search, getCityDataDebouncedCallback, openSnackbar]",[915,930],"[id, isCelsius, openSnackbar]",[809,813],"[id, openSnackbar]"]